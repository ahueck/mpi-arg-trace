import os
import lit.util
import lit.formats

# From libcxx lit: Tell pylint that we know config and lit_config exist somewhere.
if 'PYLINT_IMPORT' in os.environ:
    config = object()
    lit_config = object()

config.name = "mpitracerTest"

loaded_site_cfg = getattr(config, 'loaded_site_config', False)
if not loaded_site_cfg:
  site_cfg = lit_config.params.get('mpitracer_site_config', None)
  if site_cfg and os.path.exists(site_cfg):
    lit_config.load_config(config, site_cfg)
    raise SystemExit

config.test_format = lit.formats.ShTest(execute_external=True)
config.suffixes = ['.c','.cpp']
config.excludes = ['Inputs', 'common']

mpitracer_lib_dir    = getattr(config, 'mpitracer_lib_dir', None)
mpitracer_lib        = getattr(config, 'mpitracer_lib', None)
mpitracer_script_dir = getattr(config, 'mpitracer_script_dir', None)

clang_cpp   = getattr(config, 'clang_cpp', "clang++")
clang_cc    = getattr(config, 'clang', "clang")
filecheck   = getattr(config, 'filecheck', "FileCheck")

config.substitutions.append(('%clang-cpp', clang_cpp))
config.substitutions.append(('%clang-cc', clang_cc))
config.substitutions.append(('%filecheck', filecheck))

config.substitutions.append(('%lib_dir', mpitracer_lib_dir))
config.substitutions.append(('%mpitracer', '{}/{}'.format(mpitracer_lib_dir, mpitracer_lib)))

if mpitracer_script_dir is not None:
  config.substitutions.append(('%script_dir', mpitracer_script_dir))
  config.substitutions.append(('%wrap', '{}/wrap.py'.format(mpitracer_script_dir)))

config.substitutions.append(('%mpi-exec', '{}'.format(config.mpiexec)))
config.substitutions.append(('%mpicc', '{}'.format(config.mpicc)))
config.substitutions.append(('%mpicxx', '{}'.format(config.mpicxx)))
